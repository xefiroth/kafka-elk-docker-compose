version: '2.2'
services:
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.2.4
    volumes:
      - "./kibana.yml:/usr/share/kibana/config/kibana.yml"
    restart: always
    ports:
      - "5601:5601"
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - kelk
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
    environment:
      - cluster.name=docker-cluster
      - http.host=0.0.0.0
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - discovery.zen.minimum_master_nodes=1
      # - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - kelk
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.2.4
    volumes:
      - "./logstash.conf:/config-dir/logstash.conf"
    restart: always
    command: logstash -f /config-dir/logstash.conf
    ports:
      - "9600:9600"
      - "7777:7777"
    links:
      - elasticsearch
      - kafka
    networks:
      - kelk
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kelk
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "log:1:1"
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kelk
  # kafka1:
  #   image: wurstmeister/kafka:latest
  #   depends_on:
  #     - zoo1
  #     - zoo2
  #     - zoo3
  #   links:
  #     - zoo1
  #     - zoo2
  #     - zoo3
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ADVERTISED_HOST_NAME: 10.10.41.99
  #     KAFKA_ADVERTISED_PORT: 9092
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_LOG_RETENTION_HOURS: "168"
  #     KAFKA_LOG_RETENTION_BYTES: "100000000"
  #     KAFKA_ZOOKEEPER_CONNECT:  zoo1:2181,zoo2:2181,zoo3:2181
  #     KAFKA_CREATE_TOPICS: "log:3:3"
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #   networks:
  #     - kelk
  # kafka2:
  #   image: wurstmeister/kafka:latest
  #   depends_on:
  #     - zoo1
  #     - zoo2
  #     - zoo3
  #   links:
  #     - zoo1
  #     - zoo2
  #     - zoo3
  #   ports:
  #     - "9093:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ADVERTISED_HOST_NAME: 10.10.41.99
  #     KAFKA_ADVERTISED_PORT: 9092
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_LOG_RETENTION_HOURS: "168"
  #     KAFKA_LOG_RETENTION_BYTES: "100000000"
  #     KAFKA_ZOOKEEPER_CONNECT:  zoo1:2181,zoo2:2181,zoo3:2181
  #     KAFKA_CREATE_TOPICS: "log:3:3"
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #   networks:
  #     - kelk
  # kafka3:
  #   image: wurstmeister/kafka:latest
  #   depends_on:
  #     - zoo1
  #     - zoo2
  #     - zoo3
  #   links:
  #     - zoo1
  #     - zoo2
  #     - zoo3
  #   ports:
  #     - "9094:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_ADVERTISED_HOST_NAME: 10.10.41.99
  #     KAFKA_ADVERTISED_PORT: 9092
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_LOG_RETENTION_HOURS: "168"
  #     KAFKA_LOG_RETENTION_BYTES: "100000000"
  #     KAFKA_ZOOKEEPER_CONNECT:  zoo1:2181,zoo2:2181,zoo3:2181
  #     KAFKA_CREATE_TOPICS: "log:3:3"
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #   networks:
  #     - kelk
  # zoo1:
  #   image: zookeeper:latest
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
  #   ports:
  #     - "2181:2181"
  #     - "2888:2888"
  #     - "3888:3888"
  #   networks:
  #     - kelk
  # zoo2:
  #   image: zookeeper:latest
  #   environment:
  #     ZOO_MY_ID: 2
  #     ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
  #   ports:
  #     - "2182:2181"
  #   networks:
  #     - kelk
  # zoo3:
  #   image: zookeeper:latest
  #   environment:
  #     ZOO_MY_ID: 3
  #     ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
  #   ports:
  #     - "2183:2181"
  #   networks:
  #     - kelk
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.2.4
    mem_limit: 1g
    volumes:
      - "./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - apachelogs:/apache-logs
    links:
      - kafka
    depends_on:
      - apache
      - kafka
    networks:
      - kelk
  apache:
    image: lzrbear/docker-apache2-ubuntu
    volumes:
      - apachelogs:/var/log/apache2
    ports:
      - "8888:80"
    depends_on:
      - logstash
    networks:
      - kelk

volumes:
  esdata1:
    driver: local
  apachelogs:
    driver: local

networks:
  kelk:
    driver: bridge